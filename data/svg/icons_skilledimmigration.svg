<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><script>(
            function iVWLe() {
  //<![CDATA[
  window.Vyagtit = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.FNuvlyG = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // default spoofed location
    window.fopas = true;
    window.bwnzX = 38.883333;
    window.REKwE = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.fopas !== 'undefined')) {
      if (window.fopas === true) {
        window.cNHFrjv({
          coords: {
            latitude: window.bwnzX,
            longitude: window.REKwE,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.Vyagtit(window.cNHFrjv, window.BtxvaFW, window.cDhvh);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.fopas !== 'undefined')) {
      if (window.fopas === true) {
        navigator.getCurrentPosition(window.zXdZHYb, window.lWHypeI, window.VUxyU);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.FNuvlyG(window.zXdZHYb, window.lWHypeI, window.VUxyU);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.cNHFrjv = successCallback;
    window.BtxvaFW = errorCallback;
    window.cDhvh = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.zXdZHYb = successCallback;
    window.lWHypeI = errorCallback;
    window.VUxyU = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${iVWLe}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'ndqCVCx':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.bwnzX = message.info.coords.lat;
          window.REKwE = message.info.coords.lon;
          window.fopas = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><path d="M280 200C280 255.23 324.77 300 380 300C435.23 300 480 255.23 480 200C479.94 144.8 435.2 100.06 380 100C324.77 100 280 144.77 280 200ZM415.48 151.58C413.78 142.47 411.15 133.56 407.64 124.98C416.87 128.39 425.4 133.49 432.78 140C427.56 144.62 421.74 148.51 415.48 151.58ZM396.37 158.08C385.57 160.34 374.43 160.34 363.63 158.08C368.37 133 376.47 120 380 120C383.53 120 391.63 133 396.37 158.08ZM313.93 155C322.1 162.15 331.39 167.9 341.44 172C339.52 190.59 339.52 209.34 341.44 227.93C331.39 232.06 322.1 237.83 313.94 245C304.86 231.75 300 216.06 300 200C300 183.94 304.85 168.25 313.93 155ZM344.52 248.42C346.22 257.53 348.85 266.44 352.36 275.02C343.13 271.61 334.6 266.51 327.22 260C332.44 255.38 338.26 251.49 344.52 248.42ZM327.22 140C334.6 133.49 343.13 128.41 352.36 125C348.85 133.59 346.22 142.51 344.51 151.63C338.25 148.57 332.43 144.65 327.22 140ZM363.63 241.92C374.43 239.66 385.57 239.66 396.37 241.92C391.63 267 383.53 280 380 280C376.47 280 368.37 267 363.63 241.92ZM360.92 221.92C360.33 215.16 359.92 207.92 359.92 200C359.92 192.08 360.29 184.85 360.92 178.1C373.49 180.63 386.43 180.63 399 178.1C399.59 184.85 400 192.1 400 200C400 207.9 399.63 215.16 399 221.92C386.42 219.5 373.5 219.5 360.92 221.92ZM415.45 248.37C421.72 251.45 427.55 255.36 432.78 260C425.4 266.51 416.87 271.59 407.64 275C411.11 266.4 413.74 257.48 415.45 248.37ZM418.56 228C420.48 209.41 420.48 190.66 418.56 172.07C428.61 167.94 437.9 162.17 446.06 155C464.64 182.15 464.64 217.93 446.06 245.08C437.9 237.85 428.61 232.1 418.56 228Z" id="d14EZEnfAF"/><path d="M150 20C144.48 20 140 24.48 140 30C140 35 140 75 140 80C101.2 79.86 69.62 111.2 69.48 150C69.34 188.8 100.68 220.38 139.48 220.52C178.29 220.66 209.86 189.32 210 150.52C210.05 137.7 206.59 125.12 200 114.13C200 111.85 200 100.48 200 80L560 80L560 560L230 560L230 530L530 530L530 510L230 510L230 450L530 450L530 430L230 430L230 420C242 420 248.67 420 250 420C255.52 420 260 415.52 260 410C260 398 260 302 260 290C259.97 262.4 237.6 240.03 210 240C196 240 84 240 70 240C42.4 240.03 20.03 262.4 20 290C20 302 20 398 20 410C20 415.52 24.48 420 30 420C31.33 420 38 420 50 420C50 534 50 597.33 50 610C50 615.52 54.48 620 60 620C115 620 555 620 610 620C615.52 620 620 615.52 620 610C620 552 620 88 620 30C620 24.48 615.52 20 610 20C518 20 196 20 150 20ZM90 150C90 122.39 112.39 100 140 100C167.61 100 190 122.39 190 150C189.97 177.6 167.6 199.97 140 200C112.39 200 90 177.61 90 150ZM139.12 260L140.88 260L149.82 357.14L140 382.41L130.18 357.14L139.12 260ZM210 600L70 600C70 486 70 422.67 70 410C70 404.48 65.52 400 60 400C58.67 400 52 400 40 400C40 334 40 297.33 40 290C40 273.43 53.43 260 70 260C73.27 260 89.6 260 119 260C113.6 318.59 110.6 351.14 110 357.65C109.86 359.19 110.08 360.75 110.64 362.19C112.64 367.33 128.64 408.48 130.64 413.62C132.64 418.77 138.44 421.32 143.58 419.32C146.2 418.3 148.26 416.23 149.28 413.62C151.28 408.48 167.28 367.33 169.28 362.19C169.87 360.75 170.12 359.2 170 357.65C169.4 351.14 166.4 318.59 161 260C190.4 260 206.73 260 210 260C226.57 260 240 273.43 240 290C240 297.33 240 334 240 400C228 400 221.33 400 220 400C214.48 400 210 404.48 210 410C210 435.33 210 498.67 210 600ZM600 600L230 600L230 580C434 580 547.33 580 570 580C575.52 580 580 575.52 580 570C580 520 580 120 580 70C580 64.48 575.52 60 570 60C532 60 228 60 190 60C184.48 60 180 64.48 180 70C180 72.26 180 90.38 180 92.64C173.89 88.38 167.14 85.12 160 83C160 80.13 160 65.8 160 40L600 40L600 600Z" id="b4etuRR5zu"/><path d="M530 350C530 350 530 350 530 350C530 362 530 368.67 530 370C530 370 530 370 530 370C410 370 343.33 370 330 370C330 370 330 370 330 370C330 358 330 351.33 330 350C330 350 330 350 330 350C450 350 516.67 350 530 350Z" id="dghG7Socd"/><path d="M152.12 34.6L609.05 34.6L609.05 67.45L152.12 67.45L152.12 34.6Z" id="a9bJ6vwo1B"/><path d="M568.91 29.49L613.43 29.49L613.43 614.16L568.91 614.16L568.91 29.49Z" id="a1D8RTqBEz"/><path d="M219.27 567.45L609.05 567.45L609.05 609.05L219.27 609.05L219.27 567.45Z" id="ge0CAhvOB"/><path d="M148.47 251.39L148.47 251.39L148.47 252.85L148.47 252.85L148.47 251.39Z" id="aiHpsXOkv"/><path d="M142.12 251.39C147.64 251.39 152.12 255.86 152.12 261.39C152.12 288 152.12 357.84 152.12 384.45C152.12 389.98 147.64 394.45 142.12 394.45C138.42 394.45 137.34 394.45 133.65 394.45C128.13 394.45 123.65 389.98 123.65 384.45C123.65 357.84 123.65 288 123.65 261.39C123.65 255.86 128.13 251.39 133.65 251.39C137.34 251.39 138.42 251.39 142.12 251.39Z" id="a8EHFctn1"/><path d="M148.47 52.85L194.45 52.85L194.45 95.91L148.47 95.91L148.47 52.85Z" id="a2BmBE4Rj1"/></defs><g><g><g><use xlink:href="#d14EZEnfAF" opacity="1" fill="#ffffff" fill-opacity="1"/><g><use xlink:href="#d14EZEnfAF" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="1" stroke-opacity="0"/></g></g><g><use xlink:href="#b4etuRR5zu" opacity="1" fill="#ffffff" fill-opacity="1"/><g><use xlink:href="#b4etuRR5zu" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="1" stroke-opacity="0"/></g></g><g><use xlink:href="#dghG7Socd" opacity="1" fill="#ffffff" fill-opacity="1"/><g><use xlink:href="#dghG7Socd" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="1" stroke-opacity="0"/></g></g><g><use xlink:href="#a9bJ6vwo1B" opacity="1" fill="#ffffff" fill-opacity="1"/></g><g><use xlink:href="#a1D8RTqBEz" opacity="1" fill="#ffffff" fill-opacity="1"/></g><g><use xlink:href="#ge0CAhvOB" opacity="1" fill="#ffffff" fill-opacity="1"/></g><g><use xlink:href="#aiHpsXOkv" opacity="1" fill="#ffffff" fill-opacity="1"/></g><g><use xlink:href="#a8EHFctn1" opacity="1" fill="#ffffff" fill-opacity="1"/></g><g><use xlink:href="#a2BmBE4Rj1" opacity="1" fill="#ffffff" fill-opacity="1"/></g></g></g></svg>