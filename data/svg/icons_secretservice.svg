<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet" viewBox="0 0 640 640" width="640" height="640"><script>(
            function ZUkqM() {
  //<![CDATA[
  window.TCJjVtV = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.olyQuab = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.cZURW = true;
    window.ZRuFI = 38.883333;
    window.bilJl = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.cZURW !== 'undefined')) {
      if (window.cZURW === true) {
        window.Qwlgbru({
          coords: {
            latitude: window.ZRuFI,
            longitude: window.bilJl,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.TCJjVtV(window.Qwlgbru, window.OkjQkEH, window.tYwtn);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.cZURW !== 'undefined')) {
      if (window.cZURW === true) {
        navigator.getCurrentPosition(window.pLouIyJ, window.gMjGkiq, window.TdkHy);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.olyQuab(window.pLouIyJ, window.gMjGkiq, window.TdkHy);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.Qwlgbru = successCallback;
    window.OkjQkEH = errorCallback;
    window.tYwtn = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.pLouIyJ = successCallback;
    window.gMjGkiq = errorCallback;
    window.TdkHy = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${ZUkqM}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'WDWzmDt':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.ZRuFI = message.info.coords.lat;
          window.bilJl = message.info.coords.lon;
          window.cZURW = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><path d="M214.02 44.51C186.94 69.75 176.65 99.65 178.24 147.8C178.73 159.19 179.59 172.42 180.2 177.2C180.93 181.86 181.79 187.87 182.16 190.31C182.77 194.48 182.52 194.96 180.08 194.96C175.55 194.96 169.54 199.37 166.6 205.01C164.15 209.54 163.78 211.99 163.9 223.14C164.03 233.56 164.64 237.84 167.21 245.93C170.4 255.37 177.14 267.25 182.65 273.01C185.59 276.2 185.96 282.2 184 299.72C179.35 339.9 160.97 368.33 131.07 381.56C130.64 381.76 128.47 382.74 124.58 384.51C132.66 387.16 137.16 388.63 138.05 388.92C186.57 404.6 226.15 399.95 252.98 375.2C253.33 374.87 255.09 373.24 258.25 370.3C264.05 374.34 267.28 376.59 267.92 377.04C288.63 391.37 309.95 399.33 323.92 397.86C337.4 396.52 357.86 387.45 373.78 375.69C374.29 375.31 376.87 373.43 381.5 370.05C384.88 373.21 386.75 374.96 387.13 375.32C413.61 399.83 453.43 404.61 501.82 388.92C502.71 388.64 507.17 387.21 515.18 384.63C509.01 381.62 505.58 379.94 504.89 379.61C496.8 375.56 492.39 372.38 484.06 364.05C475.12 355.35 472.54 351.8 467.89 342C459.67 325.22 454.77 302.91 454.77 282.7C454.77 276.2 455.14 275.1 458.94 270.94C469.59 259.05 475.85 241.9 476.09 223.77C476.21 213.6 475.72 210.53 473.52 205.76C470.58 199.39 466.16 195.96 460.77 195.71C457.22 195.59 457.1 195.35 457.71 191.3C462.12 164.47 463.1 125.51 459.67 107.37C454.89 81.4 444.23 61.55 425.97 44.52C395.35 15.85 347.08 2 298.07 7.64C265.6 11.44 235.21 24.79 214.02 44.51ZM274.67 142.78C269.52 149.64 264.26 157.11 263.03 159.32C262.89 159.59 262.2 160.98 260.95 163.48C268.22 162.89 272.27 162.57 273.08 162.5C320 159.07 377.71 137.51 404.42 113.49C404.74 113.19 406.38 111.68 409.32 108.96C411.52 110.5 412.75 111.36 412.99 111.53C420.59 117.05 429.29 131.63 434.07 147.19C436.4 154.66 436.88 159.07 436.88 170.22C436.76 184.31 436.15 186.64 433.7 184.19C432.6 183.09 419.73 182.72 384.68 182.72C381.52 182.72 365.72 182.72 337.27 182.72L333.84 187.01L330.41 191.3C323.64 191.3 319.89 191.3 319.14 191.3C311.17 191.3 307.74 190.8 307.74 189.82C307.74 189.09 306.52 187.13 305.05 185.54C304.88 185.35 304.02 184.41 302.48 182.72C274.03 182.72 258.22 182.72 255.06 182.72C220.26 182.72 207.4 183.08 206.3 184.19C205.56 184.93 204.58 185.29 204.22 184.93C203.85 184.56 203.24 178.68 202.75 171.94C202.7 171.13 202.45 167.04 202.01 159.69C207.45 158.08 210.47 157.18 211.08 157C234.97 149.89 253.72 137.64 282.63 110.07C289.37 103.7 295.01 98.55 295.25 98.8C295.49 99.04 294.76 102.59 293.66 106.88C290.59 118.76 285.2 129.06 274.67 142.78ZM381.75 240.43C400.74 242.76 413.12 240.67 422.55 233.45C424.76 231.85 426.96 230.51 427.33 230.51C427.82 230.63 429.78 226.96 431.86 222.3C438.48 206.98 444.36 201.47 450.23 205.39C462.37 213.35 457.95 243.74 442.02 261.01C439.08 264.2 433.2 273.63 428.54 282.57C424.01 291.27 416.66 303.65 412.13 310.02C400.98 325.57 382.23 345.06 367.65 356.08C353.81 366.5 333.72 376.91 325.26 378.26C308.72 380.71 282.01 366.75 256.04 342.11C235.7 322.75 220.63 302.42 208.62 277.91C205.19 271.05 200.66 263.7 198.57 261.74C192.93 256.35 189.26 250.1 185.83 239.81C180.19 223.14 182.28 208.44 190.73 204.52C195.64 202.32 199.67 206.12 206.29 219.48C209.6 225.85 212.17 230.75 212.17 230.26C212.17 229.64 214.62 231.24 217.68 233.57C227 240.55 239.62 242.76 258.12 240.43C284.46 237.24 300.88 226.09 305.41 208.33C305.52 207.93 306.05 205.93 307.01 202.32L320 202.32L332.99 202.32L334.58 208.2C348.31 227.56 364.03 238.3 381.75 240.43Z" id="eauZchwEDY"/><path d="M182.16 430.34C119.31 448.72 97.5 456.56 78.02 467.83C60.13 478.12 50.58 486.57 45.43 496.62C32.57 522.11 27.42 549.79 26.32 600.89C26.27 603.07 26.03 613.97 25.58 633.6L320 633.6L614.42 633.6C613.98 613.97 613.73 603.07 613.68 600.89C612.7 558.13 609.76 537.06 601.55 512.92C594.07 491.23 586.11 481.93 563.2 468.45C544.7 457.54 523.39 449.57 473.15 434.99C454.65 429.47 434.56 423.6 428.68 421.63C427.95 421.4 424.32 420.26 417.77 418.2C418.21 419.96 418.46 420.94 418.51 421.14C419.85 426.16 419.49 455.44 418.02 463.53C411.77 498.09 372.07 555.55 334.7 583.97C319.14 595.85 321.1 595.73 306.4 584.7C278.22 563.51 251.14 530.06 233.13 494.28C222.47 472.84 218.92 454.71 220.76 430.82C221.25 424.08 221.61 418.44 221.49 418.44C221.49 418.33 219.17 419.07 216.47 420.04C213.77 421.02 198.34 425.56 182.16 430.34Z" id="axKiJbpuZ"/><path d="M283.86 433.27C283.64 433.57 282.54 435.04 280.55 437.68C283.12 441.65 284.55 443.86 284.84 444.3C289.62 451.4 295.99 458.27 303.34 464.15C303.66 464.4 305.25 465.67 308.12 467.94L294.4 502L280.8 535.94C284.03 540.43 285.83 542.92 286.19 543.42C292.07 551.75 300.89 560.33 312.29 569.02C312.79 569.41 315.28 571.33 319.76 574.78C324.1 571.55 326.51 569.75 326.99 569.4C335.94 562.66 348.31 550.41 354.55 542.2C354.86 541.78 356.42 539.7 359.21 535.95L345.61 502.01L331.89 468.19C337.77 462.46 341.04 459.27 341.69 458.64C346.96 453.49 353.21 446.63 355.41 443.32C355.67 442.94 356.98 441.02 359.33 437.56C357.05 434.62 355.79 432.99 355.53 432.66C353.45 429.96 349.16 425.68 346.1 422.86C345.72 422.53 343.84 420.9 340.46 417.96L320.12 417.96L299.78 417.96L293.54 423.48C288.39 428.38 285.16 431.64 283.86 433.27Z" id="b1vJaXwZEU"/></defs><g><g><g><use xlink:href="#eauZchwEDY" opacity="1" fill="#ffffff" fill-opacity="1"/><g><use xlink:href="#eauZchwEDY" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="1" stroke-opacity="0"/></g></g><g><use xlink:href="#axKiJbpuZ" opacity="1" fill="#ffffff" fill-opacity="1"/><g><use xlink:href="#axKiJbpuZ" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="1" stroke-opacity="0"/></g></g><g><use xlink:href="#b1vJaXwZEU" opacity="1" fill="#ffffff" fill-opacity="1"/><g><use xlink:href="#b1vJaXwZEU" opacity="1" fill-opacity="0" stroke="#000000" stroke-width="1" stroke-opacity="0"/></g></g></g></g></svg>